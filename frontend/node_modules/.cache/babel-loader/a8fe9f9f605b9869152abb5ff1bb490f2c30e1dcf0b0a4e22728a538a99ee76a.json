{"ast":null,"code":"var _jsxFileName = \"/Users/shiwanthaviraj/Documents/Work/FINSHARK/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { searchCompanies } from './api';\nimport './App.css';\nimport CardList from './Components/CardList/CardList';\nimport PortfolioList from './Components/Portfolio/PortfolioList/PortfolioList';\nimport Search from './Components/Search/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [serverError, setServerError] = useState(\"\");\n  const [portfolioValues, setPortfoliovalues] = useState([]);\n  const handleSearchChange = e => {\n    setSearch(e.target.value);\n  };\n  const onSearchSubmit = async e => {\n    const result = await searchCompanies(search);\n    if (result) {\n      if (typeof result == \"string\") {\n        setServerError(result);\n      } else if (Array.isArray(result === null || result === void 0 ? void 0 : result.data)) {\n        setSearchResult(result.data);\n      }\n    } else {\n      setServerError(\"No responsse received from the server\");\n    }\n  };\n  const onPortfolioCreate = e => {\n    e.preventDefault();\n    const exists = portfolioValues.find(value => value === e.target[0].value);\n    if (exists) return;\n    const updatedPortfolio = [...portfolioValues, e.target[0].value];\n    setPortfoliovalues(updatedPortfolio);\n  };\n  const onPortfolioDelete = e => {\n    const removed = portfolioValues.filter(item => {\n      return item !== e.target[0].value;\n    });\n    setPortfoliovalues(removed);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearchSubmit: onSearchSubmit,\n      search: search,\n      handleSearchChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), serverError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: serverError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(PortfolioList, {\n      portfolioValues: portfolioValues,\n      onPortfolioDelete: onPortfolioDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      searchResult: searchResult,\n      onPortfolioCreate: onPortfolioCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"P4Cdlj86vXZCrIAVJjSbAE3hWHQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","searchCompanies","CardList","PortfolioList","Search","jsxDEV","_jsxDEV","App","_s","search","setSearch","searchResult","setSearchResult","serverError","setServerError","portfolioValues","setPortfoliovalues","handleSearchChange","e","target","value","onSearchSubmit","result","Array","isArray","data","onPortfolioCreate","preventDefault","exists","find","updatedPortfolio","onPortfolioDelete","removed","filter","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shiwanthaviraj/Documents/Work/FINSHARK/frontend/src/App.tsx"],"sourcesContent":["\nimport { ChangeEvent, SyntheticEvent, useState } from 'react';\nimport { searchCompanies } from './api';\nimport './App.css';\nimport { CompanySearch } from './company';\nimport CardList from './Components/CardList/CardList';\nimport PortfolioList from './Components/Portfolio/PortfolioList/PortfolioList';\nimport Search from './Components/Search/Search';\nfunction App() {\n  const [search, setSearch] = useState <string>(\"\")\n  const [searchResult,setSearchResult] = useState <CompanySearch[]>([])\n  const [serverError,setServerError]=useState<string>(\"\")\n  const [portfolioValues,setPortfoliovalues] = useState<string[]>([]);\n  const handleSearchChange = (e:ChangeEvent<HTMLInputElement>) :void => {\n    setSearch(e.target.value);\n  }\n\n  const onSearchSubmit = async (e:SyntheticEvent) => {\n\n   const result =  await searchCompanies(search);\n   if(result){\n   if(typeof result == \"string\"){\n    setServerError(result)\n   }\n   else if(Array.isArray(result?.data)){\n    setSearchResult(result.data);\n  }\n  }\n  else{\n    setServerError(\"No responsse received from the server\")\n  }\n  }\n  const onPortfolioCreate = (e:any)=>{\n    e.preventDefault();\n    const exists = portfolioValues.find((value)=> value ===e.target[0].value)\n    if(exists)return;\n    \n    const updatedPortfolio= [...portfolioValues,e.target[0].value];\n    setPortfoliovalues(updatedPortfolio);\n  }\n\n  const onPortfolioDelete = (e:any)=>{\n    const removed = portfolioValues.filter((item)=>{return item!==e.target[0].value})\n    setPortfoliovalues(removed);\n\n  }\n\n  return (\n    <div className=\"App\">\n      <Search onSearchSubmit={onSearchSubmit} search={search} handleSearchChange={handleSearchChange} />\n      {serverError && <h1>{serverError}</h1>}\n      <PortfolioList portfolioValues={portfolioValues} onPortfolioDelete={onPortfolioDelete}/>\n      <CardList searchResult={searchResult} onPortfolioCreate={onPortfolioCreate}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}